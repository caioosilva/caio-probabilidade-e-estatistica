{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Welcome To Colaboratory",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/caioosilva/caio-probabilidade-e-estatistica/blob/master/Lista_4\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "02ejbwHJEmUg"
      },
      "source": [
        "#disciplina: Probabilidade e estatistica\n",
        "#aluno = Caio Cezar Villalba e Silva\n",
        "#aula 4"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bXhp4pRiQiaU"
      },
      "source": [
        "#exercicio 1"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e8u_62OOIMRo",
        "outputId": "94088a31-4de0-413c-eb4c-51b414e43e10"
      },
      "source": [
        "quantidade = int(input('Número de lados do poligono: '))\n",
        "area = 0\n",
        "\n",
        "if quantidade == 3:\n",
        "  lado = float(input('Medidas em cm: '))\n",
        "  cal = lado/2 # Calculo da altura do triangulo\n",
        "  a = lado*2 - cal*2\n",
        "  b = a ** 0.5 # Calculo da altura do triangulo\n",
        "  area = lado*b/2 # Calculo da area \n",
        "  print('TRIÂNGULO. Valor da area é: ', area)\n",
        "elif quantidade == 4: \n",
        "  lado = float(input('Medidas em cm: '))\n",
        "  area = lado**2 # Calculo da area \n",
        "  print('QUADRADO. O valor da area (em cm): ',area)\n",
        "elif quantidade == 5:\n",
        "  print('PENTÁGONO')"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Número de lados do poligono: 3\n",
            "Medidas em cm: 4\n",
            "TRIÂNGULO. Valor da area é:  4.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7Ll6eIMGQotr"
      },
      "source": [
        "#exercicio 2"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dZ2wiE7MPXUC",
        "outputId": "338e9a96-d795-4afb-a312-c5e251342af1"
      },
      "source": [
        "quantidade = int(input('Número de lados do poligono: '))\n",
        "area = 0\n",
        "\n",
        "if quantidade == 3:\n",
        "  lado = float(input('Medidas em cm: '))\n",
        "  cal = lado/2 # Calculo da altura do triangulo\n",
        "  a = lado*2 - cal*2\n",
        "  b = a ** 0.5 # Calculo da altura do triangulo\n",
        "  area = lado*b/2 # Calculo da area \n",
        "  print('TRIÂNGULO. Valor da area é: ', area)\n",
        "elif quantidade == 4: \n",
        "  lado = float(input('Medidas em cm: '))\n",
        "  area = lado**2 # Calculo da area \n",
        "  print('QUADRADO. O valor da area (em cm): ',area)\n",
        "elif quantidade == 5:\n",
        "  print('PENTÁGONO')\n",
        "else:\n",
        "  if quantidade < 3:\n",
        "    print('NÃO É POLÍGONO!')\n",
        "  else:\n",
        "    print('POLÍGONO NÃO IDENTIFICADO!')"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Número de lados do poligono: 4\n",
            "Medidas em cm: 9\n",
            "QUADRADO. O valor da area (em cm):  81.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZX8CAiY8QuIC"
      },
      "source": [
        "#exercicio 3"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7EX2rGFuRXTb",
        "outputId": "34853bfd-6245-400c-abfd-c52e872b2bd6"
      },
      "source": [
        "l = []\n",
        "t = 3\n",
        "for _ in range(0, t):\n",
        "  l.append(input('Número: '))\n",
        "print('O maior é ' + max(l))"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Número: 10\n",
            "Número: 12\n",
            "Número: 11\n",
            "O maior é 12\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vlK8ySw1SF_a"
      },
      "source": [
        "#exercicio 4"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LkOSt0mTSK0v",
        "outputId": "a3dff085-c5c8-4823-d53d-4975537207ba"
      },
      "source": [
        "l = input(\"Medida do lado 1: \")\n",
        "l2 = input(\"Medida do lado 2: \")\n",
        "l3 = input(\"Medida do lado 3: \")\n",
        "\n",
        "if l == l2 and l2 == l3:\n",
        "  print('Equilátero!')\n",
        "elif l == l2 or l == l3 or l2 == l3:\n",
        "  print('Isóceles!')\n",
        "else: \n",
        "  print('Escaleno!')"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Medida do lado 1: 1\n",
            "Medida do lado 2: 2\n",
            "Medida do lado 3: 3\n",
            "Escaleno!\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TcwcroTNTAq8"
      },
      "source": [
        "#exercicio 5"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wB6PGlp4TC5k",
        "outputId": "39822396-ad0a-42ec-eef8-07c6fb253c76"
      },
      "source": [
        "a = int(input('Ângulo 1: '))\n",
        "b = int(input('Ângulo 2: '))\n",
        "c = int(input('Ângulo 3: '))\n",
        "\n",
        "if a == 90 or b == 90 or c == 90:\n",
        "  print('Triangulo retangulo!')\n",
        "elif a > 90 or b > 90 or c > 90:\n",
        "  print('Triangulo obtusangulo!')\n",
        "else:\n",
        "  print('Triangulo acutangulo!')"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Ângulo 1: 14\n",
            "Ângulo 2: 15\n",
            "Ângulo 3: 16\n",
            "Triangulo acutangulo!\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AO_Tu35YUG24"
      },
      "source": [
        "#exercicio 6"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kKHs5NbSUI8c",
        "outputId": "56d3ad38-9596-4689-da9f-77856651d560"
      },
      "source": [
        "n = int(input('Numero:  '))\n",
        "for _ in range(n ):   \n",
        "  print(_)"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Numero:  1\n",
            "0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7Mmcx19XXhwo"
      },
      "source": [
        "#exercicio 7"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M1I1Q0kEXjpr"
      },
      "source": [
        "n = int(input('Numero: '))\n",
        "if n < 1 or n > 4:\n",
        "  while True:\n",
        "    print('Entrada Inválida!')\n",
        "    n = int(input('Numero: '))\n",
        "    if n >= 1 and n <= 4:\n",
        "      break\n",
        "print(n)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6brlgltUbFh5"
      },
      "source": [
        "#exercicio 8"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "76jRIabrbHhm",
        "outputId": "c664fa80-12dc-4084-8d56-63a6469d32f1"
      },
      "source": [
        "n = int(input('Numero: '))\n",
        "m = 0 \n",
        "while n != 0 : \n",
        "  if n > m:\n",
        "     m = n\n",
        "  n = int(input('Numero: '))\n",
        "print('Maior entre é:', m)"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Numero: 5\n",
            "Numero: 4\n",
            "Numero: 9\n",
            "Numero: 0\n",
            "Maior entre é: 9\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GyofOa9KbKVK"
      },
      "source": [
        "#exercicio 9"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vrapajZNbM3c"
      },
      "source": [
        "n = input('Escreva 4 numeros: ')\n",
        "n2 = str(n)\n",
        "print('Analisando o numero {}'.format(n))\n",
        "print('Unidade: {}'.format(n[3]))\n",
        "print('Dezena: {}'.format(n[2]))\n",
        "print('Centena: {}'.format(n[1]))\n",
        "print('Milhar: {}'.format(n[0]))"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}